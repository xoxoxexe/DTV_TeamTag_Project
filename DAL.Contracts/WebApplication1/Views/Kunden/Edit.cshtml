@model Backend.Contracts.Kunde

@{
    ViewBag.Title = "KUNDEN BEARBEITEN";
}

<h2>KUNDEN BEARBEITEN</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Strasse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strasse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Strasse, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor( model => model.Plz, htmlAttributes: new
                   {
                       @class = "control-label col-md-2"
                   } )
                    </td>
                    <td>-</td>
                    <td>
                        @Html.LabelFor( model => model.Ort, htmlAttributes: new
                   {
                       @class = "control-label col-md-2"
                   } )
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.EditorFor( model => model.Plz, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control"
                       }
                   } )
                        @Html.ValidationMessageFor( model => model.Plz, "", new
                   {
                       @class = "text-danger"
                   } )
                    </td>
                    <td>-</td>
                    <td>
                        @Html.EditorFor( model => model.Ort, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control"
                       }
                   } )
                        @Html.ValidationMessageFor( model => model.Ort, "", new
                   {
                       @class = "text-danger"
                   } )
                    </td>
                </tr>
            </table>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
            </div>
        </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Speichern" class="btn btn-default" />
            @Html.ActionLink( "Abbrechen", "Index", new
           {
               controller = "Kunden"
           }, new
           {
               @class = "btn btn-default"
           } )
        </div>
    </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
